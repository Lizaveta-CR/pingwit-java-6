Task 1
Доделать валидаторы:
1)	Добавить поле LegoColor (BLUE, GREEN, YELLOW,ORANGE…)color.
2)	Создать аннотацию @ValidColor, которая будет проверять, что пользователь не ввел цвета из массива LegoColor[] colors = {BLUE, GREEN}
3)	ColorAnnotationValidationService


Task 2
Мировые часы.
Пользователь вводит время с указанием тайм зоны, а программа выдает ему сколько сейчас времени в других городах.
Например, 15.00 Europe/Warsaw:
- Анкара 17.00
- Лондон 14.00
и т.д. Города выберите сами.

Task 3(*)
Битва гладиаторов.
Давайте напишем простую консольную игру.
При запуске программа просит пользователя ввести имя - это будет прозвище гладиатора.
Затем программа случайным образом выбирает имя соперника из заранее заданного списка и выводит на экран сообщение,
что сейчас будет битва между [соперник_1] vs [соперник_2]

Далее программа спрашивает готов ли пользователь и после нажатия клавиши enter начинается бой.

Управление

Нападение:
1 - нанести удар в голову
2 - нанести удар в корпус
3 - нанести удар по ногам

Защита:
1 - поставить верхний блок
2 - поставить средний блок
3 - поставить нижний блок

Как проходит битва:
Пользователь выбирает номер удара, а компьютер случайным образом ставит блок, затем компьютер наносит ответный случайный удар,
а пользователь выбирает каким способом его отразить.

Игрок, который пропустил 4 удара проигрывает.

Какие инструменты вам могут пригодиться:
Math.random() - поможет со случайным значением
Класс Scanner

Не пишите весь код в методе main(). Попробуйте выносить функционал в разные классы